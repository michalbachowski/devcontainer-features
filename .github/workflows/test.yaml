name: "CI - Test Features"
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test-autogenerated-standard:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - bash-prompt
          - bash-sensible
          - scalafmt-native
          - shell-local
          - snyk-cli
          - zsh-prompt-currenttime
        baseImage:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios --skip-duplicated -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-duplicated:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - bash-prompt
          - bash-sensible
          - scalafmt-native
          - shell-local
          - snyk-cli
          - zsh-prompt-currenttime
        baseImage:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios --skip-autogenerated -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  # test-autogenerated-special-image:
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   strategy:
  #     matrix:
  #       features:
  #         - custom-ca-cert
  #         - pre-commit-initialize
  #       baseImage:
  #         - michalbachowski/devcontainer-test-image:v1
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: "Install latest devcontainer CLI"
  #       run: npm install -g @devcontainers/cli

  #     - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
  #       run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - bash-prompt
          - bash-sensible
          #- custom-ca-cert
          #- pre-commit-initialize
          - scalafmt-native
          - shell-local
          - snyk-cli
          - zsh-prompt-currenttime
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated --skip-duplicated .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
