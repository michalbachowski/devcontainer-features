IMAGE=bachowskimichal/devcontainer-test-ubuntu:v2
IN=src
FROM=bash-prompt
FILE=library_scripts.sh
PUSH=false

.PHONY: build-docker build-images build-ubuntu cmp-files sync-files test-all test-autogenerated test-duplicate test-global test-scenarios

sync-files:
	find \
		./$(IN) \
		-maxdepth 1 \
		-type d \
		-not -wholename './$(IN)' \
		-not -wholename './$(IN)/$(FROM)' \
		-exec cp ./$(IN)/$(FROM)/$(FILE) {} \;

cmp-files:
	find \
		./$(IN) \
		-maxdepth 1 \
		-type d \
		-not -wholename './$(IN)' \
		-not -wholename './$(IN)/$(FROM)' \
		-exec cmp ./$(IN)/$(FROM)/$(FILE) {}/$(FILE) \;

test-autogenerated:
	devcontainer features test \
		--features $(FEATURE) \
		--remote-user root \
		--skip-scenarios \
		--skip-duplicated \
		--base-image $(IMAGE) \
		/workspaces/devcontainer-features

test-duplicate:
	devcontainer features test \
		--features $(FEATURE) \
		--remote-user root \
		--skip-autogenerated \
		--skip-scenarios \
		--base-image $(IMAGE) \
		/workspaces/devcontainer-features

test-global:
	devcontainer features test \
		--global-scenarios-only \
		--remote-user root \
		--base-image $(IMAGE) \
		/workspaces/devcontainer-features

test-scenarios:
	devcontainer features test \
		--features $(FEATURE) \
		--remote-user root \
		--skip-autogenerated \
		--skip-duplicated \
		/workspaces/devcontainer-features

test-all:
	devcontainer features test \
		--features $(FEATURE) \
		--remote-user root \
		--base-image $(IMAGE) \
		/workspaces/devcontainer-features

build-debian:
	cd image && \
	docker build \
		--tag bachowskimichal/devcontainer-test-debian:v2 \
		--file debian.Dockerfile \
		--push=$(PUSH) \
		.

build-ubuntu:
	cd image && \
	docker build \
		--tag bachowskimichal/devcontainer-test-ubuntu:v2 \
		--file ubuntu.Dockerfile \
		--push=$(PUSH) \
		.

build-images: build-ubuntu build-debian
	@echo Done
